[tool.poetry]
name = "steam-manifest-tool"
version = "3.6.0"
description = "A modern tool for fetching and managing Steam game manifest files"
authors = ["Steam Manifest Team <dev@steammanifest.tool>"]
readme = "README.md"
packages = [{ include = "steam_manifest", from = "src" }]
include = ["src/steam_manifest/assets/*"]
homepage = "https://github.com/steam-manifest/tool"
repository = "https://github.com/steam-manifest/tool"
keywords = ["steam", "manifest", "games", "download"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
httpx = ">=0.24.0"
vdf = ">=3.4"
colorama = ">=0.4.6"
colorlog = ">=6.7.0"
retrying = ">=1.3.4"
gitpython = ">=3.1.30"

[tool.poetry.group.dev.dependencies]
black = ">=23.0.0"
isort = ">=5.12.0"
flake8 = ">=6.0.0"
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
safety = ">=2.3.0"
bandit = ">=1.7.0"
pyinstaller = ">=5.13.0"

[tool.poetry.scripts]
steam-manifest = "steam_manifest.cli.main:main"
steam-extract = "steam_manifest.tools.extractor:extract_repository_info"
steam-clean = "steam_manifest.tools.cleaner:clean_repository_history"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pylint]
max-line-length = 88

[tool.poetry.build]
generate-setup-file = false

# PyInstaller configuration for building executable with icon
[tool.pyinstaller]
name = "steam-manifest-tool"
entry-point = "steam_manifest.cli.main:main"
icon = "src/steam_manifest/assets/main.ico"
onefile = true
console = true
add-data = ["src/steam_manifest/assets:steam_manifest/assets"]